package org.easybooks.xscj.action;

import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.io.File;
import java.io.FileInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.Map;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts2.ServletActionContext;
import org.easybooks.xscj.jdbc.StudentJdbc;
import org.easybooks.xscj.vo.Student;
import org.easybooks.xscj.vo.Score;
import com.opensymphony.xwork2.ActionSupport;

public class StudentAction extends ActionSupport {
    private String xm;
    private String msg;
    private Student student;
    private Score score;
    private File photo;

    public String addStu() throws Exception {
        String sql = "select * from XS where XM ='" + getXm() + "'";
        Statement stmt = OrclConn.conns.createStatement();
        ResultSet rs = stmt.executeQuery(sql);
        if (rs.next()) {
            setMsg("该学生已经存在！");
            return "success";
        }
        StudentJdbc studentJ = new StudentJdbc();
        Student stu = new Student();
        stu.setXm(getXm());
        stu.setXb(student.getXb());
        stu.setCssj(student.getCssj());
        stu.setKcs(student.getKcs());
        stu.setBz(student.getBz());
        
        if (this.getPhoto()!= null) {
            FileInputStream fis = new FileInputStream(this.getPhoto());
            byte[] buffer = new byte[fis.available()];
            fis.read(buffer);
            stu.setZp(buffer);
        }

        if (studentJ.addStudent(stu)!= null) {
            setMsg("添加成功！");
            Map request = (Map) ActionContext.getContext().get("request");
            request.put("student", stu);
        } else {
            setMsg("添加失败，请检查输入信息！");
        }
        return "success";
    }

    public String getImage() throws Exception {
        HttpServletResponse response = ServletActionContext.getResponse();
        StudentJdbc studentJ = new StudentJdbc();
        student = new Student();
        student.setXm(getXm());
        byte[] img = studentJ.getStudentZp(student);
        response.setContentType("image/jpeg");
        ServletOutputStream os = response.getOutputStream();
        if (img!= null && img.length!= 0) {
            for (int i = 0; i < img.length; i++) {
                os.write(img[i]);
            }
        }
        os.flush();
        return NONE;
    }

    public String delStu() throws Exception {
        boolean exist = false;
        String sql = "select * from XS where XM ='" + getXm() + "'";
        Statement stmt = OrclConn.conns.createStatement();
        ResultSet rs = stmt.executeQuery(sql);
        if (rs.next()) {
            exist = true;
        }
        if (exist) {
            StudentJdbc studentJ = new StudentJdbc();
            Student stu = new Student();
            stu.setXm(getXm());
            if (studentJ.delStudent(stu)!= null) {
                setMsg("删除成功！");
            } else {
                setMsg("删除失败，请检查操作权限！");
            }
        } else {
            setMsg("该学生不存在！");
        }
        return "success";
    }

    public String queStu() throws Exception {
        boolean exist = false;
        String sql = "select * from XS where XM ='" + getXm() + "'";
        Statement stmt = OrclConn.conns.createStatement();
        ResultSet rs = stmt.executeQuery(sql);
        if (rs.next()) {
            exist = true;
        }
        if (exist) {
            StudentJdbc studentJ = new StudentJdbc();
            Student stu = new Student();
            stu.setXm(getXm());
            if (studentJ.showStudent(stu)!= null) {
                setMsg("查询成功！");
                Map request = (Map) ActionContext.getContext().get("request");
                request.put("student", stu);
                ScoreJdbc scoreJ = new ScoreJdbc();
                Score sco = new Score();
                sco.setXm(getXm());
                List<Score> scoList = scoreJ.showScore(sco);
                request.put("scoreList", scoList);
            } else {
                setMsg("查询失败，请检查操作权限！");
            }
        } else {
            setMsg("该学生不存在！");
        }
        return "success";
    }

    public String updStu() throws Exception {
        StudentJdbc studentJ = new StudentJdbc();
        Student stu = new Student();
        stu.setXm(getXm());
        stu.setXb(student.getXb());
        stu.setCssj(student.getCssj());
        stu.setKcs(student.getKcs());
        stu.setBz(student.getBz());
        if (this.getPhoto()!= null) {
            FileInputStream fis = new FileInputStream(this.getPhoto());
            byte[] buffer = new byte[fis.available()];
            fis.read(buffer);
            stu.setZp(buffer);
        }

        if (studentJ.updateStudent(stu)!= null) {
            setMsg("更新成功！");
            Map request = (Map) ActionContext.getContext().get("request");
            request.put("student", stu);
        } else {
            setMsg("更新失败，请检查输入信息！");
        }
        return "success";
    }

    public String getXm() {
        return xm;
    }

    public void setXm(String xm) {
        this.xm = xm;
    }

    public String getMsg() {
        return msg;
    }

    public void setMsg(String msg) {
        this.msg = msg;
    }

    public Student getStudent() {
        return student;
    }

    public void setStudent(Student student) {
        this.student = student;
    }

    public Score getScore() {
        return score;
    }

    public void setScore(Score score) {
        this.score = score;
    }

    public File getPhoto() {
        return photo;
    }

    public void setPhoto(File photo) {
        this.photo = photo;
    }
}